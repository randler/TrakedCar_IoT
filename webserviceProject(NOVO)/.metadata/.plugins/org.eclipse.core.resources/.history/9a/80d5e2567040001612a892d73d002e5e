package br.edu.ifba.embarcados.webcoisas;

import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

import javax.ws.rs.GET;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.Response.Status;

import com.google.gson.Gson;

import br.edu.ifba.embarcados.webcoisas.bean.Carro;
import br.edu.ifba.embarcados.webcoisas.bean.Usuario;
import br.edu.ifba.embarcados.webcoisas.dao.CarroDAO;
import br.edu.ifba.embarcados.webcoisas.dao.UsuarioDAO;
import br.edu.ifba.embarcados.webcoisas.factory.ConnectionFactory;
import br.edu.ifba.embarcados.webcoisas.sensoriamento.LeitorSensoriamento;

@Path("servico")
public class Servico {
	
	@GET
	@Path("/id/")
	@Produces(MediaType.TEXT_PLAIN)
	public String getId() {
		return LeitorSensoriamento.getRFID() + "";
	}

	
	@GET
	@Path("/sensores")
	@Produces(MediaType.TEXT_PLAIN)
	public String getSensores() {
		return LeitorSensoriamento.getSensores() + "";
	}
	
	 @GET
	 @Path("/consultar")
	 @Produces("application/json")
	 public String pesquisarCarro() {
		 Connection con = ConnectionFactory.getConnection();
		 CarroDAO carroDAO = CarroDAO.getInstancia();
		 return new Gson().toJson(carroDAO.concultarCarro(con));		 
	 }

	 @PUT
     public Response createUser(Usuario user) throws SQLException, InstantiationException, IllegalAccessException, ClassNotFoundException {

		 Connection con = ConnectionFactory.getConnection();
		 UsuarioDAO usuarioDAO = UsuarioDAO.getInstancia();
		 usuarioDAO.adicionarUsuario(user, con);
         con.close();
           return Response.status(Status.OK).build();
     }
	
	
	

	
	
	//----------------------------------------------- Consultar -------------------------
	
	public static boolean consultaCarro(int id){
		Connection con = ConnectionFactory.getConnection();
		 
		boolean saida = false;
		List<Carro> carros = new ArrayList<Carro>();
		carros = CarroDAO.concultarCarro(con);
				
		for (Carro carro : carros) {
			if((carro.getId() == id) && (carro.isStatus())){
				saida = true;
			}		
		}
		return saida;
	}
	
	
	//--------------------------------------- Gerar ID ---------------------------------
	
	public static int gerarId(){
		int id = 0;
		Timestamp dataDeHoje = new Timestamp(System.currentTimeMillis());
		id = (int) dataDeHoje.getTime();
		return id*(-1);
	}
	
}
