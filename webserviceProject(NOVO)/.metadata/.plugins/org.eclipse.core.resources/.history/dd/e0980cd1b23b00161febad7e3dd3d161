package br.edu.ifba.embarcados.webcoisas;

import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

import br.edu.ifba.embarcados.webcoisas.bean.Carro;
import br.edu.ifba.embarcados.webcoisas.bean.Usuario;
import br.edu.ifba.embarcados.webcoisas.factoryBD.ConnectionFactory;
import br.edu.ifba.embarcados.webcoisas.factoryBD.comandos.Adicionar;
import br.edu.ifba.embarcados.webcoisas.factoryBD.comandos.Alterar;
import br.edu.ifba.embarcados.webcoisas.factoryBD.comandos.Consultar;
import br.edu.ifba.embarcados.webcoisas.factoryBD.comandos.Remover;
import br.edu.ifba.embarcados.webcoisas.sensoriamento.LeitorSensoriamento;

@Path("servico")
public class Servico {
	private static Adicionar adicionar 	= Adicionar.getInstancia();
	private static Consultar consultar 	= Consultar.getInstancia();	
	private static Remover remover 		= Remover.getInstancia();
	private static Alterar alterar 		= Alterar.getInstancia();


	private static Connection con = new ConnectionFactory().getConnection();
	
	@GET
	@Path("/id/")
	@Produces(MediaType.TEXT_PLAIN)
	public String getId() {
		return LeitorSensoriamento.getRFID() + "";
	}

	
	@GET
	@Path("/sensores")
	@Produces(MediaType.TEXT_PLAIN)
	public String getSensores() {
		return LeitorSensoriamento.getSensores() + "";
	}

	
	
	
	
	public void addUser(String name){
		
		try {
			Usuario usuario = new Usuario(gerarId(),name);	
			
			adicionar.adicionarUsuario(usuario, con);
			
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	public void addCar(int id, String nome, String marca, String ano, Usuario usuario){
		
		try {
			Carro carro = new Carro(id, nome, marca, ano, usuario.getId());
			
			adicionar.adicionarCarro(usuario.getId(), carro, con);
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public static boolean consultaCarro(int id){
		boolean saida = false;
		List<Carro> carros = new ArrayList<Carro>();
		carros = consultar.concultarCarro(con);
				
		for (Carro carro : carros) {
			if((carro.getId() == id) && (carro.isStatus())){
				saida = true;
			}		
		}
		return saida;
	}
	
	private static String getHora(){
		return Calendar.HOUR_OF_DAY + ":" + Calendar.MINUTE + ":" + Calendar.SECOND;
	}
	
	private static String getData(){
		String saida=  "";
		int dia = Calendar.DAY_OF_MONTH;
		int mes = Calendar.MONTH;
		int ano = Calendar.YEAR;
		
		saida = dia + "/" + (mes+1) + "/" + ano;
;		return saida;
	}
	
	public static int gerarId(){
		int id = 0;
		Timestamp dataDeHoje = new Timestamp(System.currentTimeMillis());
		id = (int) dataDeHoje.getTime();
		return id*(-1);
	}
	
}
